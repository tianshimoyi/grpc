// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: protos/person.proto

package myprotos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Gender int32

const (
	Gender_MAN   Gender = 0
	Gender_WOMEN Gender = 1
	Gender_BOY   Gender = 2
	Gender_GIRL  Gender = 1
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "MAN",
		1: "WOMEN",
		2: "BOY",
		// Duplicate value: 1: "GIRL",
	}
	Gender_value = map[string]int32{
		"MAN":   0,
		"WOMEN": 1,
		"BOY":   2,
		"GIRL":  1,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_person_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_protos_person_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_protos_person_proto_rawDescGZIP(), []int{0}
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_person_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_protos_person_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_protos_person_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PMes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class       string `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
	TeacherName string `protobuf:"bytes,2,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
}

func (x *PMes) Reset() {
	*x = PMes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_person_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PMes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMes) ProtoMessage() {}

func (x *PMes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_person_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMes.ProtoReflect.Descriptor instead.
func (*PMes) Descriptor() ([]byte, []int) {
	return file_protos_person_proto_rawDescGZIP(), []int{1}
}

func (x *PMes) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *PMes) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

type PhotoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PhotoMessage) Reset() {
	*x = PhotoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_person_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoMessage) ProtoMessage() {}

func (x *PhotoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_person_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoMessage.ProtoReflect.Descriptor instead.
func (*PhotoMessage) Descriptor() ([]byte, []int) {
	return file_protos_person_proto_rawDescGZIP(), []int{2}
}

func (x *PhotoMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *PhotoResponse) Reset() {
	*x = PhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_person_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoResponse) ProtoMessage() {}

func (x *PhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_person_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoResponse.ProtoReflect.Descriptor instead.
func (*PhotoResponse) Descriptor() ([]byte, []int) {
	return file_protos_person_proto_rawDescGZIP(), []int{3}
}

func (x *PhotoResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_protos_person_proto protoreflect.FileDescriptor

var file_protos_person_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x06, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x04, 0x50, 0x4d, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a,
	0x0d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0x33,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x4e, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x4f, 0x4d, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x4f, 0x59, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x49, 0x52, 0x4c, 0x10, 0x01, 0x1a,
	0x02, 0x10, 0x01, 0x32, 0x8c, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x12, 0x0c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x4d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x0c,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x1a, 0x0a, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x4d, 0x65, 0x73, 0x30, 0x01, 0x12, 0x36, 0x0a, 0x09, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_person_proto_rawDescOnce sync.Once
	file_protos_person_proto_rawDescData = file_protos_person_proto_rawDesc
)

func file_protos_person_proto_rawDescGZIP() []byte {
	file_protos_person_proto_rawDescOnce.Do(func() {
		file_protos_person_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_person_proto_rawDescData)
	})
	return file_protos_person_proto_rawDescData
}

var file_protos_person_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_person_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_person_proto_goTypes = []interface{}{
	(Gender)(0),           // 0: test.Gender
	(*Person)(nil),        // 1: test.Person
	(*PMes)(nil),          // 2: test.PMes
	(*PhotoMessage)(nil),  // 3: test.PhotoMessage
	(*PhotoResponse)(nil), // 4: test.PhotoResponse
}
var file_protos_person_proto_depIdxs = []int32{
	1, // 0: test.Student.GetMess:input_type -> test.Person
	1, // 1: test.Student.GetAll:input_type -> test.Person
	3, // 2: test.Student.SendPhoto:input_type -> test.PhotoMessage
	2, // 3: test.Student.GetMess:output_type -> test.PMes
	2, // 4: test.Student.GetAll:output_type -> test.PMes
	4, // 5: test.Student.SendPhoto:output_type -> test.PhotoResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_person_proto_init() }
func file_protos_person_proto_init() {
	if File_protos_person_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_person_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_person_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PMes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_person_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_person_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_person_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_person_proto_goTypes,
		DependencyIndexes: file_protos_person_proto_depIdxs,
		EnumInfos:         file_protos_person_proto_enumTypes,
		MessageInfos:      file_protos_person_proto_msgTypes,
	}.Build()
	File_protos_person_proto = out.File
	file_protos_person_proto_rawDesc = nil
	file_protos_person_proto_goTypes = nil
	file_protos_person_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StudentClient is the client API for Student service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StudentClient interface {
	GetMess(ctx context.Context, in *Person, opts ...grpc.CallOption) (*PMes, error)
	GetAll(ctx context.Context, in *Person, opts ...grpc.CallOption) (Student_GetAllClient, error)
	SendPhoto(ctx context.Context, opts ...grpc.CallOption) (Student_SendPhotoClient, error)
}

type studentClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentClient(cc grpc.ClientConnInterface) StudentClient {
	return &studentClient{cc}
}

func (c *studentClient) GetMess(ctx context.Context, in *Person, opts ...grpc.CallOption) (*PMes, error) {
	out := new(PMes)
	err := c.cc.Invoke(ctx, "/test.Student/GetMess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentClient) GetAll(ctx context.Context, in *Person, opts ...grpc.CallOption) (Student_GetAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Student_serviceDesc.Streams[0], "/test.Student/GetAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &studentGetAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Student_GetAllClient interface {
	Recv() (*PMes, error)
	grpc.ClientStream
}

type studentGetAllClient struct {
	grpc.ClientStream
}

func (x *studentGetAllClient) Recv() (*PMes, error) {
	m := new(PMes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *studentClient) SendPhoto(ctx context.Context, opts ...grpc.CallOption) (Student_SendPhotoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Student_serviceDesc.Streams[1], "/test.Student/SendPhoto", opts...)
	if err != nil {
		return nil, err
	}
	x := &studentSendPhotoClient{stream}
	return x, nil
}

type Student_SendPhotoClient interface {
	Send(*PhotoMessage) error
	CloseAndRecv() (*PhotoResponse, error)
	grpc.ClientStream
}

type studentSendPhotoClient struct {
	grpc.ClientStream
}

func (x *studentSendPhotoClient) Send(m *PhotoMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *studentSendPhotoClient) CloseAndRecv() (*PhotoResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PhotoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StudentServer is the server API for Student service.
type StudentServer interface {
	GetMess(context.Context, *Person) (*PMes, error)
	GetAll(*Person, Student_GetAllServer) error
	SendPhoto(Student_SendPhotoServer) error
}

// UnimplementedStudentServer can be embedded to have forward compatible implementations.
type UnimplementedStudentServer struct {
}

func (*UnimplementedStudentServer) GetMess(context.Context, *Person) (*PMes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMess not implemented")
}
func (*UnimplementedStudentServer) GetAll(*Person, Student_GetAllServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedStudentServer) SendPhoto(Student_SendPhotoServer) error {
	return status.Errorf(codes.Unimplemented, "method SendPhoto not implemented")
}

func RegisterStudentServer(s *grpc.Server, srv StudentServer) {
	s.RegisterService(&_Student_serviceDesc, srv)
}

func _Student_GetMess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServer).GetMess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Student/GetMess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServer).GetMess(ctx, req.(*Person))
	}
	return interceptor(ctx, in, info, handler)
}

func _Student_GetAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Person)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StudentServer).GetAll(m, &studentGetAllServer{stream})
}

type Student_GetAllServer interface {
	Send(*PMes) error
	grpc.ServerStream
}

type studentGetAllServer struct {
	grpc.ServerStream
}

func (x *studentGetAllServer) Send(m *PMes) error {
	return x.ServerStream.SendMsg(m)
}

func _Student_SendPhoto_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StudentServer).SendPhoto(&studentSendPhotoServer{stream})
}

type Student_SendPhotoServer interface {
	SendAndClose(*PhotoResponse) error
	Recv() (*PhotoMessage, error)
	grpc.ServerStream
}

type studentSendPhotoServer struct {
	grpc.ServerStream
}

func (x *studentSendPhotoServer) SendAndClose(m *PhotoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *studentSendPhotoServer) Recv() (*PhotoMessage, error) {
	m := new(PhotoMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Student_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.Student",
	HandlerType: (*StudentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMess",
			Handler:    _Student_GetMess_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAll",
			Handler:       _Student_GetAll_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendPhoto",
			Handler:       _Student_SendPhoto_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protos/person.proto",
}
